#!/usr/bin/env node
const figlet = require("figlet")
const Printer = require('@darkobits/lolcatjs')
const txt = figlet.textSync("S K D") + "\n" + "孙匡东脚手架"
const result = Printer.fromString(txt)
const pro = require("commander")
const inquirer = require('inquirer');
const json2ts = require("json2ts");
// 获取用户的全路径
// const userHome = require("user-home");
const shell = require("shelljs");
// 下载git
const downLoad = require("download-git-repo");
const tempalteUrl = "direct:https://github.com/qiuJinLong/yd-vue-kernel.git"

pro.version(result, "-v,--version")
pro.option("-i,--init", "项目初始化")
const bindHandler = {
    init: function () {
        inquirer.prompt([
            {
                type: "text",
                message: "请输入用户文件夹的名称",
                name: "dirname"
            },
            {
                type: "list",
                name: "js",
                massage: "请选择语言",
                choices: ["ES6", "TypeScript"]
            }
        ]).then(answers => {
            console.log("answers", answers)
            const _dirname = answers.dirname
            const _pwd = shell.pwd().stdout
            const _projectPath = `${_pwd}/${_dirname}`
            console.log(_projectPath)
            // 进入用户目录中
            shell.cd(_pwd)
            shell.rm("-rf", _projectPath)
            shell.mkdir(_dirname)
            // 项目下载到 _projectPath
            downLoad(tempalteUrl, _projectPath, {clone: true}, err => {
                if (err) {
                    console.log(chalk.red("yd-cli 启动异常"), err)
                } else {
                    // 变量过滤
                    shell.sed("-i", "yd-vue-kernel", _dirname, _projectPath + "/package.json")
                }
            })
        })
    },
    json2ts(jsonUrl) {
        console.log("接口地址: ", jsonUrl)
        const jsonContent = {
            code: 1,
            info: {
                message: "请求成功",
                data: [{
                    num: 1,
                    title: "3号仓库"
                }]
            }
        }
        const result = json2ts.convert(JSON.stringify(jsonContent));
        console.log(result);
        spinner.stop()
    }
}
// 前面是值，后面是参数
pro.usage("<cmd> [env]")
    .arguments("<cmd> [env]")
    .action(function (cmd, otherParams) {
        const handler = bindHandler[cmd]
        if (handler) {
            handler(otherParams)
        } else {
            console.log(cmd + " have not, please run: sun --help")
        }
    });

pro.parse(process.argv)